#include<stdio.h>
//topological_sort can be applied only to an acyclic ,undirected graph
void topological_sort(int adj_mat[][25],int n);
int main()
{
	int n,adj_mat[25][25],in_deg[25];
	int i,j,vis[25];
	printf("Enter the number of vertices\n");
	scanf("%d",&n);
	printf("Enter the adjacency matrix\n");
	for(i = 0;i < n;i ++)
	{
		for(j = 0;j < n;j++)
		{
			scanf("%d",&adj_mat[i][j]);
		}
	}
	printf("Topological order :\n");
	topological_sort(adj_mat,n);
	return 0;
}
void topological_sort(int adj_mat[][25],int n)
{
    int i,j,vis[25];
    int in_deg[25] = {};
    for(i = 0;i < n;i++)
		  vis[i] = 0;
    recal:
    //re-initializing in_degrees to 0
    for(i = 0;i < n;i++)
      in_deg[i] = 0;
    //calculating in degrees
    for(j = 0;j <n;j++)
    {
        for(i = 0;i < n;i++)
        {
            if(adj_mat[i][j] == 1)
                in_deg[j] += 1;
        }
    }
    //visiting the vertices whose in degree is 0 
    for(i = 0;i < n;i++)
    {
        if((in_deg[i] == 0) && (vis[i] == 0))
        {
            printf("%d ",i);
            vis[i] = 1;
            for(j = 0;j < n;j++)
		        adj_mat[i][j] = 0;
		        goto recal;
        }
    }
}
